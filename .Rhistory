)
),
tabItem(tabName = "Viewdata",
sidebarLayout(sidebarPanel(
selectInput(
inputId = "specie",
label = "Select the flower specie",
choices = unique(d$Summary),
selected = "Rain"
)
),
tableOutput("data"))
)
)
)
)
ui <- dashboardPage(
dashboardHeader(title = "Weather History"),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard"),
menuItem("View data", tabName = "Viewdata")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "dashboard",
fluidRow(
column(
width = 12,
box(
width = 100%,
plotOutput('plot1')
)
)
)
),
tabItem(tabName = "Viewdata",
sidebarLayout(sidebarPanel(
selectInput(
inputId = "specie",
label = "Select the flower specie",
choices = unique(d$Summary),
selected = "Rain"
)
),
tableOutput("data"))
)
)
)
)
ui <- dashboardPage(
dashboardHeader(title = "Weather History"),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard"),
menuItem("View data", tabName = "Viewdata")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "dashboard",
fluidRow(
column(
width = 12,
box(
width = "100%",
plotOutput('plot1')
)
)
)
),
tabItem(tabName = "Viewdata",
sidebarLayout(sidebarPanel(
selectInput(
inputId = "specie",
label = "Select the flower specie",
choices = unique(d$Summary),
selected = "Rain"
)
),
tableOutput("data"))
)
)
)
)
shinyApp(ui, server)
names(d)
ui <- dashboardPage(
dashboardHeader(title = "Weather History"),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard"),
menuItem("View data", tabName = "Viewdata")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "dashboard",
selectInput(
inputId = "var",
label = "Choice variable",
choices = c("Yes", "No", "I smoke rarely"),
selected = "Yes"
),
fluidRow(
column(
width = 12,
box(
width = "100%",
plotOutput('plot1')
)
)
)
),
tabItem(tabName = "Viewdata",
sidebarLayout(sidebarPanel(
selectInput(
inputId = "specie",
label = "Select the flower specie",
choices = unique(d$Summary),
selected = "Rain"
)
),
tableOutput("data"))
)
)
)
)
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Weather History"),
dashboardSidebar(
sidebarMenu(
menuItem("Diagram", tabName = "diagram"),
menuItem("View data", tabName = "Viewdata")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "diagram",
selectInput(
inputId = "var",
label = "Choice variable",
choices = c("Yes", "No", "I smoke rarely"),
selected = "Yes"
),
titlePanel("Histogram"),
fluidRow(
column(
width = 12,
box(
width = "100%",
plotOutput('plot1')
)
)
)
),
tabItem(tabName = "Viewdata",
sidebarLayout(sidebarPanel(
selectInput(
inputId = "specie",
label = "Select the flower specie",
choices = unique(d$Summary),
selected = "Rain"
)
),
tableOutput("data"))
)
)
)
)
shinyApp(ui, server)
names(d)
ui <- dashboardPage(
dashboardHeader(title = "Weather History"),
dashboardSidebar(
sidebarMenu(
menuItem("Diagram", tabName = "diagram"),
menuItem("View data", tabName = "Viewdata")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "diagram",
selectInput(
inputId = "var",
label = "Choice variable",
choices = c("temp", "h", "wind"),
selected = "temp"
),
titlePanel("Histogram"),
fluidRow(
column(
width = 12,
box(
width = "100%",
plotOutput('plot1')
)
)
)
),
tabItem(tabName = "Viewdata",
sidebarLayout(sidebarPanel(
selectInput(
inputId = "specie",
label = "Select the flower specie",
choices = unique(d$Summary),
selected = "Rain"
)
),
tableOutput("data"))
)
)
)
)
server <- function(input, output){
output$plot1 <- renderPlot({
hist(
data[, char()],
xlab = input$var,
main = paste("Histogram of", input$var)
)
})
output$data = renderTable({
d[d$Summary == input$specie, ]
})
}
shinyApp(ui, server)
iris
View(iris)
View(iris)
str(iris)
server <- function(input, output){
output$plot1 <- renderPlot({
hist(
data[, input$var],
xlab = input$var,
main = paste("Histogram of", input$var)
)
})
output$data = renderTable({
d[d$Summary == input$specie, ]
})
}
shinyApp(ui, server)
shinyApp(ui, server)
names(d)
ui <- dashboardPage(
dashboardHeader(title = "Weather History"),
dashboardSidebar(
sidebarMenu(
menuItem("Diagram", tabName = "diagram"),
menuItem("View data", tabName = "Viewdata")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "diagram",
selectInput(
inputId = "var",
label = "Choice variable",
choices = c("Temperature", "Apparent Temperature", "Humidity", "Wind Speed", "Visibility", "Pressure millibars"),
selected = "Temperature"
),
titlePanel("Histogram"),
fluidRow(
column(
width = 12,
box(
width = "100%",
plotOutput('plot1')
)
)
)
),
tabItem(tabName = "Viewdata",
sidebarLayout(sidebarPanel(
selectInput(
inputId = "specie",
label = "Select the flower specie",
choices = unique(d$Summary),
selected = "Rain"
)
),
tableOutput("data"))
)
)
)
)
server <- function(input, output){
char = reactive({
switch(
input$var,
"Temperature" = "Temperature..C.",
"Apparent Temperature" = "Apparent.Temperature..C.",
"Humidity" = "Humidity",
"Wind Speed" = "Wind.Speed..km.h.",
"Visibility" = "Visibility..km.",
"Pressure millibars" = "Pressure..millibars."
)
})
output$plot1 <- renderPlot({
hist(
data[, input$var],
xlab = input$var,
main = paste("Histogram of", input$var)
)
})
output$data = renderTable({
d[d$Summary == input$specie, ]
})
}
shinyApp(ui, server)
server <- function(input, output){
char = reactive({
switch(
input$var,
"Temperature" = "Temperature..C.",
"Apparent Temperature" = "Apparent.Temperature..C.",
"Humidity" = "Humidity",
"Wind Speed" = "Wind.Speed..km.h.",
"Visibility" = "Visibility..km.",
"Pressure millibars" = "Pressure..millibars."
)
})
output$plot1 <- renderPlot({
hist(
data[, char()],
xlab = input$var,
main = paste("Histogram of", input$var)
)
})
output$data = renderTable({
d[d$Summary == input$specie, ]
})
}
shinyApp(ui, server)
server <- function(input, output){
char = reactive({
switch(
input$var,
"Temperature" = "Temperature..C.",
"Apparent Temperature" = "Apparent.Temperature..C.",
"Humidity" = "Humidity",
"Wind Speed" = "Wind.Speed..km.h.",
"Visibility" = "Visibility..km.",
"Pressure millibars" = "Pressure..millibars."
)
})
output$plot1 <- renderPlot({
hist(
d[, char()],
xlab = input$var,
main = paste("Histogram of", input$var)
)
})
output$data = renderTable({
d[d$Summary == input$specie, ]
})
}
server <- function(input, output){
char = reactive({
switch(
input$var,
"Temperature" = "Temperature..C.",
"Apparent Temperature" = "Apparent.Temperature..C.",
"Humidity" = "Humidity",
"Wind Speed" = "Wind.Speed..km.h.",
"Visibility" = "Visibility..km.",
"Pressure millibars" = "Pressure..millibars."
)
})
output$plot1 <- renderPlot({
hist(
d[, char()],
xlab = input$var,
main = paste("Histogram of", input$var)
)
})
output$data = renderTable({
d[d$Summary == input$specie, ]
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Weather History"),
dashboardSidebar(
sidebarMenu(
menuItem("Diagram", tabName = "diagram"),
menuItem("View data", tabName = "Viewdata")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "diagram",
selectInput(
inputId = "var",
label = "Choice variable",
choices = c("Temperature", "Apparent Temperature", "Humidity", "Wind Speed", "Visibility", "Pressure millibars"),
selected = "Temperature"
),
titlePanel("Histogram"),
fluidRow(
column(
width = 12,
box(
width = "100%",
plotOutput('plot1')
)
)
),
fluidRow(
tabsetPanel(
tabPanel("Summary", verbatimTextOutput("mysummary")),
tabPanel("Boxplot", plotOutput("myplot"))
)
)
),
tabItem(tabName = "Viewdata",
sidebarLayout(sidebarPanel(
selectInput(
inputId = "specie",
label = "Select the flower specie",
choices = unique(d$Summary),
selected = "Rain"
)
),
tableOutput("data"))
)
)
)
)
server <- function(input, output){
char = reactive({
switch(
input$var,
"Temperature" = "Temperature..C.",
"Apparent Temperature" = "Apparent.Temperature..C.",
"Humidity" = "Humidity",
"Wind Speed" = "Wind.Speed..km.h.",
"Visibility" = "Visibility..km.",
"Pressure millibars" = "Pressure..millibars."
)
})
output$plot1 <- renderPlot({
hist(
d[, char()],
xlab = input$var,
main = paste("Histogram of", input$var)
)
})
output$data = renderTable({
d[d$Summary == input$specie, ]
})
output$mysummary = renderPrint({
summary(d[, char()])
})
output$myplot  = renderPlot({
boxplot(d[, char()], main = "Boxplot")
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Weather History"),
dashboardSidebar(
sidebarMenu(
menuItem("Diagram", tabName = "diagram"),
menuItem("View data", tabName = "Viewdata")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "diagram",
selectInput(
inputId = "var",
label = "Choice variable",
choices = c("Temperature", "Apparent Temperature", "Humidity", "Wind Speed", "Visibility", "Pressure millibars"),
selected = "Temperature"
),
titlePanel("Histogram"),
fluidRow(
column(
width = 12,
box(
width = "100%",
plotOutput('plot1')
)
)
),
fluidRow(
tabsetPanel(
tabPanel("Summary", verbatimTextOutput("mysummary")),
tabPanel("Boxplot", plotOutput("myplot"))
)
)
),
tabItem(tabName = "Viewdata",
sidebarLayout(sidebarPanel(
selectInput(
inputId = "specie",
label = "Select the Summary",
choices = unique(d$Summary),
selected = "Rain"
)
),
tableOutput("data"))
)
)
)
)
shinyApp(ui, server)
